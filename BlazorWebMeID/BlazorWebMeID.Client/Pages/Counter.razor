@page "/counter"
@using Microsoft.AspNetCore.Authorization
@using BlazorWebMeID.Identity.Client.Services
@rendermode InteractiveAuto
@inject IHttpClientFactory HttpClientFactory
@inject HostingEnvironmentService HostingEnvironmentService
@attribute [Authorize]

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="FetchData">Fetch data using Api</button>
<p role="status">Say: @DataFromApi</p>

@code {

    [SupplyParameterFromForm]
    public string? Text { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    private int currentCount = 0;
    private string DataFromApi = string.Empty;
    private bool isSaving = false;

    private async Task FetchData()
    {        
        var client = HttpClientFactory.CreateClient("API");
        var dataApi = await client.GetStringAsync("/api/Counter");
        DataFromApi = $"Data fetched: {dataApi} ,  called from {HostingEnvironmentService.EnvironmentName}";
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private async void HandleSubmit()
    {
        isSaving = true;
        await Task.Delay(2000);

        isSaving = false;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            await FetchData();
        }
    }
}
